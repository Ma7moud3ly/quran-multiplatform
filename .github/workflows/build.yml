name: Build & Release Quran App

on:
  push:
    branches:
      - test
    tags:
      - "v*"
  pull_request:
    branches:
      - test

jobs:
  # ---- Build Android + WASM + Linux desktop ----
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
      - run: gem install fastlane -NV

      # Android APK
      - run: fastlane android build_apk
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}

      # Linux desktop
      - run: fastlane desktop linux
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}

      # WASM
      - run: fastlane wasm build
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
          GITHUB_REF_NAME: ${{ github.ref_name }}

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: quran-app-*.apk
      - uses: actions/upload-artifact@v4
        with:
          name: wasm-dist
          path: quran-app-*.zip
      - uses: actions/upload-artifact@v4
        with:
          name: desktop-linux
          path: composeApp/build/compose/binaries/main-release/deb/*.deb

  # ---- Build Windows desktop ----
  build-windows:
    runs-on: windows-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - run: gem install fastlane -NV

      - name: Build Desktop (Windows)
        run: fastlane desktop windows
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}

      - uses: actions/upload-artifact@v4
        with:
          name: desktop-windows
          path: composeApp/build/compose/binaries/main-release/exe/*.exe

  # ---- Build macOS desktop ----
  build-macos:
    runs-on: macos-latest
    needs: build-windows
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
      - run: gem install fastlane -NV

      - run: fastlane desktop macos
        env:
          DEBUG_KEYSTORE_BASE64: ${{ secrets.DEBUG_KEYSTORE_BASE64 }}
          RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}

      - uses: actions/upload-artifact@v4
        with:
          name: desktop-macos
          path: composeApp/build/compose/binaries/main-release/dmg/*.dmg

  # ---- Release ----
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-macos
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: |
            release/**/*.apk
            release/**/*.zip
            release/**/*.deb
            release/**/*.exe
            release/**/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
